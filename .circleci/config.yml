version: 2.1

orbs:
  gradle: circleci/gradle@1.0.11
  docker: circleci/docker@0.5.13
  deployment-spike:
    commands:
      ecr_login:
        steps:
          - run:
              name: Login to ECR
              command: |
                temp_role=$(aws sts assume-role --role-arn arn:aws:iam::902837325998:role/CircleCi --role-session-name ci)
                export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq .Credentials.AccessKeyId | xargs)
                export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq .Credentials.SecretAccessKey | xargs)
                export AWS_SESSION_TOKEN=$(echo $temp_role | jq .Credentials.SessionToken | xargs)
                eval $(aws ecr get-login --no-include-email --region=eu-west-2)

workflows:
  checkout-build-test:
    jobs:
      - validate_and_plan_terraform
      - approve_terraform:
          type: approval
          requires:
            - validate_and_plan_terraform
      - apply_terraform:
          requires:
            - approve_terraform
      - gradle/test:
          test_results_path: build/reports/tests
          reports_path: build/reports/
      - build_jar
      - build_docker_image:
          requires:
            - build_jar
            - validate_and_plan_terraform

jobs:
  build_jar:
    docker:
      - image: circleci/openjdk:8
    steps:
      - checkout
      - gradle/with_cache:
          steps:
            - run:
                name: Run Task
                command: ./gradlew build -x test
            - persist_to_workspace:
                root: "~"
                paths:
                  - project/build/libs/gs-spring-boot-0.1.0.jar

  build_docker_image:
    executor: docker/machine
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Copy build artifacts from workspace
          command: cp -r /tmp/workspace/project/build /home/circleci/project/
      - docker/build:
          image: 902837325998.dkr.ecr.eu-west-2.amazonaws.com/laa-ccms-deployment-spike
          tag: latest
      - deployment-spike/ecr_login
      - run:
          name: Push container
          command: |
            docker push 902837325998.dkr.ecr.eu-west-2.amazonaws.com/laa-ccms-deployment-spike


  validate_and_plan_terraform:
    docker:
      - image: hashicorp/terraform
    steps:
      - checkout
      - run:
          name: Validate and plan terraform
          command: |
            terraform --version
            cd ~/project/terraform/
            terraform init -lock-timeout=300s
            terraform validate
            terraform plan

  apply_terraform:
      docker:
        - image: hashicorp/terraform
      steps:
        - checkout
        - run:
            name: Apply terraform
            command: |
              cd ~/project/terraform/
              terraform init -lock-timeout=300s
              terraform apply -lock-timeout=300s --auto-approve


  plan_destroy_terraform:
    docker:
      - image: hashicorp/terraform
    steps:
      - checkout
      - run:
          name: Validate and plan terraform
          command: |
            terraform --version
            cd ~/project/terraform/
            terraform init -lock-timeout=300s
            terraform plan -destroy

  destroy_terraform:
    docker:
      - image: hashicorp/terraform
    steps:
      - checkout
      - run:
          name: Delete terraform
          command: |
            cd ~/project/terraform/
            terraform init -lock-timeout=300s
            terraform destroy --auto-approve
